package com.example.word_finder;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.widget.ExpandableListView;
import android.widget.ExpandableListView.OnChildClickListener;
import android.widget.ExpandableListView.OnGroupClickListener;
import android.widget.ExpandableListView.OnGroupCollapseListener;
import android.widget.ExpandableListView.OnGroupExpandListener;
import android.widget.Toast;

public class MainActivity4 extends Activity {

    ExpandableListAdapter listAdapter;
    ExpandableListView expListView;
    List<String> listDataHeader;
    HashMap<String, List<String>> listDataChild;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main4);

        // get the listview
        expListView = (ExpandableListView) findViewById(R.id.lvExp);

        // preparing list data
        prepareListData();

        listAdapter = new ExpandableListAdapter(this, listDataHeader, listDataChild);

        // setting list adapter
        expListView.setAdapter(listAdapter);

        // Listview Group click listener
        expListView.setOnGroupClickListener(new OnGroupClickListener() {

            @Override
            public boolean onGroupClick(ExpandableListView parent, View v,
                                        int groupPosition, long id) {
                // Toast.makeText(getApplicationContext(),
                // "Group Clicked " + listDataHeader.get(groupPosition),
                // Toast.LENGTH_SHORT).show();
                return false;
            }
        });

        // Listview Group expanded listener
        expListView.setOnGroupExpandListener(new OnGroupExpandListener() {

            @Override
            public void onGroupExpand(int groupPosition) {
                Toast.makeText(getApplicationContext(),
                        listDataHeader.get(groupPosition) + " Expanded",
                        Toast.LENGTH_SHORT).show();
            }
        });

        // Listview Group collasped listener
        expListView.setOnGroupCollapseListener(new OnGroupCollapseListener() {

            @Override
            public void onGroupCollapse(int groupPosition) {
                Toast.makeText(getApplicationContext(),
                        listDataHeader.get(groupPosition) + " Collapsed",
                        Toast.LENGTH_SHORT).show();

            }
        });

        // Listview on child click listener
        expListView.setOnChildClickListener(new OnChildClickListener() {

            @Override
            public boolean onChildClick(ExpandableListView parent, View v,
                                        int groupPosition, int childPosition, long id) {
                // TODO Auto-generated method stub


                Toast.makeText(
                        getApplicationContext(),
                        listDataHeader.get(groupPosition)
                                + " : "
                                + listDataChild.get(
                                listDataHeader.get(groupPosition)).get(
                                childPosition), Toast.LENGTH_SHORT)
                        .show();
                return false;
            }
        });
    }

    /*
     * Preparing the list data
     */
    private void prepareListData() {
        listDataHeader = new ArrayList<String>();
        listDataChild = new HashMap<String, List<String>>();

        // Adding child data
        listDataHeader.add("A");
        listDataHeader.add("B");
        listDataHeader.add("C");
        listDataHeader.add("D");
        listDataHeader.add("E");
        listDataHeader.add("F");
        listDataHeader.add("G");
        listDataHeader.add("H");
        listDataHeader.add("I");
        listDataHeader.add("J");
        listDataHeader.add("K");
        listDataHeader.add("L");
        listDataHeader.add("M");
        listDataHeader.add("N");
        listDataHeader.add("O");
        listDataHeader.add("P");
        listDataHeader.add("Q");
        listDataHeader.add("R");
        listDataHeader.add("S");
        listDataHeader.add("T");
        listDataHeader.add("U");
        listDataHeader.add("V");
        listDataHeader.add("W");
        listDataHeader.add("X");
        listDataHeader.add("Y");
        listDataHeader.add("Z");

        // Adding child data
        List<String> a = new ArrayList<String>();
        a.add("a (indefinite article)");
        a.add("abandon (verb)");
        a.add("ability (noun)");
        a.add("able (adjective)");
        a.add("absent (adjective)");
        a.add("abstract (adjective)");
        a.add("abuse (noun)");
        a.add("academic (adjective)");
        a.add("accept (verb)");
        a.add("access (noun)");
        a.add("accident (noun)");
        a.add("account (noun)");
        a.add("abstract (adjective)");
        a.add("abuse (noun)");
        a.add("account (verb)");
        a.add("ache (noun)");
        a.add("act (verb)");
        a.add("add (verb)");
        a.add("address (noun)");
        a.add("adjust (verb)");
        a.add("adopt (noun)");
        a.add("advance (verb)");
        a.add("affect (verb)");
        a.add("after (conjunction)");
        a.add("again (adverb)");
        a.add("against (preposition)");
        a.add("age (noun)");
        a.add("ago");
        a.add("ahead (adverb)");
        a.add("aid (noun)");
        a.add("aim (noun)");
        a.add("aisle");
        a.add("alarm (noun)");
        a.add("alert (verb)");
        a.add("alibi");
        a.add("alimony");
        a.add("alive (adjective)");
        a.add("all (pronoun)");
        a.add("allow (verb)");
        a.add("almost (adverb)");
        a.add("alone (adjective)");
        a.add("amateur");
        a.add("amaze (verb)");
        a.add("ambitious");
        a.add("among (preposition)");
        a.add("amount (noun)");
        a.add("an (indefinite article)");
        a.add("analogy");
        a.add("anger (verb)");
        a.add("angle (noun)");
        a.add("animal (noun)");
        a.add("any (pronoun");
        a.add("anybody (pronoun)");
        a.add("anyone (pronoun)");
        a.add("anything (pronoun)");
        a.add("anyway (adverb)");
        a.add("anywhere (adverb)");
        a.add("area (verb)");
        a.add("argue");
        a.add("around");
        a.add("art");
        a.add("article");
        a.add("as");
        a.add("aside");
        a.add("ask");
        a.add("asleep");
        a.add("assume");
        a.add("atmosphere");
        a.add("attach");
        a.add("attack");
        a.add("attend");
        a.add("attention");
        a.add("attitude (noun)");
        a.add("attraction");
        a.add("attractive (adjective)");
        a.add("audience");
        a.add("augment (verb)");
        a.add("author (noun)");
        a.add("available (adjective)");
        a.add("average (adjective)");
        a.add("avoid (verb)");
        a.add("awake (verb)");
        a.add("aware (adjective)");
        a.add("away (adverb)");

        List<String> b = new ArrayList<String>();
        b.add("baby (noun)");
        b.add("back (adjective)");
        b.add("barn (noun)");
        b.add("baseball");
        b.add("be");
        b.add("beach (noun)");
        b.add("bean (noun)");
        b.add("bear (verb)");
        b.add("before");
        b.add("believe (verb)");
        b.add("belong (verb)");
        b.add("bible (noun)");
        b.add("bid (verb)");
        b.add("big (adjective)");
        b.add("bill (noun)");
        b.add("bird (noun)");
        b.add("bit (noun)");
        b.add("bite (noun)");
        b.add("bitter (adjective)");
        b.add("black (adjective)");
        b.add("blame (noun)");
        b.add("block (noun)");
        b.add("blow (noun)");
        b.add("blue (noun)");
        b.add("board (verb)");
        b.add("book (noun)");
        b.add("bother (noun)");
        b.add("bride (noun)");
        b.add("brief");
        b.add("bright (adjective)");
        b.add("broken");
        b.add("brother");
        b.add("bruise");
        b.add("builder");

        List<String> c = new ArrayList<String>();
        c.add("cage (noun)");
        c.add("cake (noun)");
        c.add("calculate (verb)");
        c.add("calendar (noun)");
        c.add("call (noun)");
        c.add("camera (noun)");
        c.add("campaign (noun)");
        c.add("calm");
        c.add("can (noun)");
        c.add("cancel (verb)");
        c.add("care (verb)");
        c.add("career");
        c.add("case");
        c.add("cash");
        c.add("cashier");
        c.add("cast");
        c.add("cat (noun)");
        c.add("catalog (noun)");
        c.add("cause (noun)");
        c.add("cause (verb)");
        c.add("caution");
        c.add("cautious");
        c.add("center (noun)");
        c.add("challenge (noun)");
        c.add("chance (noun)");
        c.add("change (noun)");
        c.add("chaos");
        c.add("chapter (noun)");
        c.add("character (noun)");
        c.add("chest");
        c.add("chicken (noun)");
        c.add("child (noun)");
        c.add("children");
        c.add("class (noun)");
        c.add("close (adjective)");
        c.add("clothes (noun)");
        c.add("cold");
        c.add("color (verb)");
        c.add("color (noun)");
        c.add("communicate (verb)");
        c.add("compare");
        c.add("competition");
        c.add("concept (noun)");
        c.add("computer (noun)");
        c.add("conclusion");
        c.add("condition (noun)");
        c.add("conference (noun)");
        c.add("confidence");
        c.add("connection (noun)");
        c.add("consent (noun)");
        c.add("consider (verb)");
        c.add("construct (verb)");
        c.add("continue (verb)");
        c.add("control (verb)");
        c.add("cook (noun)");
        c.add("courage");
        c.add("creative");
        c.add("cruel");
        c.add("cut");
        c.add("cynical");

        List<String> d = new ArrayList<String>();
        d.add("dad");
        d.add("daily");
        d.add("dam (noun)");
        d.add("damage (verb)");
        d.add("dare (verb)");
        d.add("data (noun)");
        d.add("date (noun)");
        d.add("daughter");
        d.add("dawn");
        d.add("day");
        d.add("dead (adjective)");
        d.add("deaf (adjective)");
        d.add("deal (noun)");
        d.add("dear (adjective)");
        d.add("debt");
        d.add("decade");
        d.add("defeat");
        d.add("define (verb)");
        d.add("describe (verb)");
        d.add("design (verb)");
        d.add("disagree (verb)");
        d.add("disappear");
        d.add("disappoint");
        d.add("disaster");
        d.add("disc");
        d.add("discipline (verb)");
        d.add("disconnect");
        d.add("discover");
        d.add("dismay");
        d.add("distress");
        d.add("do (verb)");
        d.add("dominate (verb)");
        d.add("dot (noun)");
        d.add("double (adjective)");
        d.add("down");
        d.add("draft");
        d.add("dribble (verb)");
        d.add("dusk");
        d.add("duty-free");

        List<String> e = new ArrayList<String>();
        e.add("eac (pronoun)");
        e.add("ear (noun)");
        e.add("earn (verb)");
        e.add("easy (adjective)");
        e.add("eat (verb)");
        e.add("ecology");
        e.add("economics");
        e.add("ecosystem");
        e.add("edge (noun)");
        e.add("edit");
        e.add("elbow");
        e.add("elect (verb)");
        e.add("else (adverb)");
        e.add("elsewhere (adverb)");
        e.add("emerge (verb)");
        e.add("emotion (noun)");
        e.add("enough (pronoun)");
        e.add("enthusiasm");
        e.add("equal (adjective)");
        e.add("erase (verb)");
        e.add("error (noun)");
        e.add("escape (verb)");
        e.add("even (adverb)");
        e.add("evening");
        e.add("eventually");
        e.add("ever");
        e.add("everybody (pronoun)");
        e.add("everyday (adjective)");
        e.add("everything (pronoun)");
        e.add("everywhere (adverb)");
        e.add("ex");
        e.add("excite (verb)");
        e.add("extinct");
        e.add("extroverted");
        e.add("eyebrow");
        e.add("eyelash");
        e.add("eyelid");

        List<String> f = new ArrayList<String>();
        f.add("fabric (noun)");
        f.add("face");
        f.add("fact (noun)");
        f.add("fan (noun)");
        f.add("far (adjective)");
        f.add("farm (noun)");
        f.add("fate (noun)");
        f.add("father");
        f.add("fear");
        f.add("feather (noun)");
        f.add("feature (noun)");
        f.add("feed (verb)");
        f.add("feel (noun)");
        f.add("fellow (noun)");
        f.add("fever");
        f.add("finance");
        f.add("fine (noun)");
        f.add("find (verb)");
        f.add("fire");
        f.add("first");
        f.add("fisherman");
        f.add("fish (noun)");
        f.add("fit (adjective)");
        f.add("flame (noun)");
        f.add("flat (adjective)");
        f.add("flavor (noun)");
        f.add("flood (verb)");
        f.add("flow");
        f.add("flower (verb)");
        f.add("focus (verb)");
        f.add("forearm)");
        f.add("forehead");
        f.add("frustration");
        f.add("full-time");
        f.add("fun");
        f.add("furniture");
        f.add("fury");

        List<String> g = new ArrayList<String>();
        g.add("gain (noun)");
        g.add("game (noun)");
        g.add("gender (noun)");
        g.add("gene (noun)");
        g.add("generate (verb)");
        g.add("generous");
        g.add("gentle");
        g.add("genuine (adjective)");
        g.add("geography (noun)");
        g.add("get (verb)");
        g.add("giant (adjective)");

        g.add("gift (noun)");
        g.add("girl (noun)");
        g.add("give (verb)");
        g.add("glad (adjective)");
        g.add("glass (noun)");
        g.add("global");
        g.add("glory (noun)");
        g.add("glove (noun)");
        g.add("glow noun");
        g.add("glue (noun)");
        g.add("go (verb)");
        g.add("goal");
        g.add("good (adjective)");
        g.add("goodbye (interjection)");
        g.add("govern (verb)");
        g.add("grammar (noun)");
        g.add("gray (adjective)");
        g.add("great (adjective)");
        g.add("greed");
        g.add("guess (verb)");
        g.add("guilt");
        g.add("gullible");
        g.add("gum");
        g.add("gun (noun)");
        g.add("gust");
        g.add("guy (noun)");

        List<String> h = new ArrayList<String>();
        h.add("habit (noun)");
        h.add("habitat");
        h.add("hair (noun)");
        h.add("half (adjective)");
        h.add("hammer (noun)");
        h.add("hand (verb)");
        h.add("hand (noun)");
        h.add("handle (verb)");
        h.add("handsome (adjective)");
        h.add("handwriting (noun)");
        h.add("hang (verb)");
        h.add("happen (verb)");
        h.add("happy");
        h.add("hard (adjective)");
        h.add("hardware (noun)");
        h.add("harm (noun)");
        h.add("hat (noun)");
        h.add("hate");
        h.add("hatred");
        h.add("have (verb)");
        h.add("head (noun)");
        h.add("heal (verb)");
        h.add("health (noun)");
        h.add("hear (verb)");
        h.add("heart (noun)");
        h.add("heaven (noun)");
        h.add("heavy (adjective)");
        h.add("height (noun)");
        h.add("hell (noun)");
        h.add("hello (noun)");
        h.add("help (noun)");
        h.add("her (adjective)");
        h.add("here (adverb)");
        h.add("hero (noun)");
        h.add("hers (pronoun)");
        h.add("herself (pronoun)");
        h.add("hesitate (verb)");
        h.add("hide (verb)");
        h.add("high (adverb)");
        h.add("hint (verb)");
        h.add("him (pronoun)");
        h.add("himself (pronoun)");
        h.add("hip");
        h.add("hire (noun)");
        h.add("his (pronoun)");
        h.add("historical (adjective)");
        h.add("history (noun)");
        h.add("hit (verb)");
        h.add("hives");
        h.add("hobby (noun)");
        h.add("hockey");
        h.add("hold (noun)");
        h.add("hole (noun)");
        h.add("holiday (noun)");
        h.add("hollow (adjective)");
        h.add("holy (adjective)");
        h.add("home (adverb)");
        h.add("honest");
        h.add("honor (verb)");
        h.add("hook (noun)");
        h.add("hop (noun)");
        h.add("hope");
        h.add("horizontal (adjective)");
        h.add("horn (noun)");
        h.add("horse (noun)");
        h.add("hospital (noun)");
        h.add("hostility");
        h.add("hot (adjective");
        h.add("hour");
        h.add("house (noun)");
        h.add("how (conjunction)");
        h.add("however (conjunction)");
        h.add("hug (verb)");
        h.add("huge (adjective)");
        h.add("humid");
        h.add("humidity");
        h.add("hurricane");
        h.add("husband");
        h.add("hypothesis (noun)");

        List<String> i = new ArrayList<String>();
        i.add("I (pronoun)");
        i.add("ice (noun)");
        i.add("idea (noun)");
        i.add("ideal (noun)");
        i.add("identical (adjective)");
        i.add("identification (noun)");
        i.add("identity (noun)");
        i.add("if (conjunction)");
        i.add("ignore (verb)");
        i.add("ill (adverb)");
        i.add("illegal");
        i.add("illness (noun)");
        i.add("illustrate (verb)");
        i.add("image (noun)");
        i.add("imagine (noun)");
        i.add("imitate (verb)");
        i.add("immediate (verb)");
        i.add("immoral (adjective)");
        i.add("impact (noun)");
        i.add("impatient");
        i.add("important (adjective)");
        i.add("impression (noun)");
        i.add("improve (verb)");
        i.add("in (adverb)");
        i.add("inch (adverb)");
        i.add("include (verb)");
        i.add("increase (noun)");
        i.add("index (noun)");
        i.add("indigestion");
        i.add("individual (noun)");
        i.add("information");
        i.add("initial (noun)");
        i.add("inner (adjective)");
        i.add("innocent (adjective)");
        i.add("inside (adjective)");
        i.add("inside (adjective)");
        i.add("instant (pronoun)");
        i.add("insult (pronoun)");
        i.add("insurance (noun)");
        i.add("intelligence (noun)");
        i.add("intense (adjective)");
        i.add("intention (noun)");
        i.add("interest (verb)");
        i.add("interior (noun)");
        i.add("internal (adjective)");
        i.add("internet (noun)");
        i.add("interpret (verb)");
        i.add("interval (noun)");
        i.add("interview (noun)");
        i.add("into (preposition)");
        i.add("introduction");
        i.add("invest");
        i.add("investigate (verb)");
        i.add("itinerary");

        List<String> j = new ArrayList<String>();
        j.add("jacket (noun)");
        j.add("jail (noun)");
        j.add("jam (verb)");
        j.add("jar (noun)");
        j.add("jaw");
        j.add("jealous (adjective)");
        j.add("jet (noun)");
        j.add("join (verb)");
        j.add("joy");
        j.add("judge (verb)");
        j.add("judgement (noun)");
        j.add("juice (noun)");
        j.add("jump (verb)");
        j.add("junior (adjective)");
        j.add("jurisdiction");
        j.add("jury");
        j.add("just (adjective)");
        j.add("justice");

        List<String> k = new ArrayList<String>();
        k.add("keen (adjective)");
        k.add("keep (verb)");
        k.add("key (adjective)");
        k.add("kick (noun)");
        k.add("kill (verb)");
        k.add("kind (adjective)");
        k.add("kindness");
        k.add("king (noun)");
        k.add("kingdom (noun)");
        k.add("kiss (noun)");
        k.add("kitchen (noun)");
        k.add("knee");
        k.add("knit (verb)");
        k.add("knock (noun)");
        k.add("know (verb)");
        k.add("knowledge (noun)");
        k.add("knuckle");

        List<String> l = new ArrayList<String>();
        l.add("label (noun)");
        l.add("labor (verb)");
        l.add("lack (verb)");
        l.add("ladder (noun)");
        l.add("lake (noun)");
        l.add("lamp (noun)");
        l.add("land (noun)");
        l.add("last");
        l.add("late");
        l.add("later");
        l.add("laugh (noun)");
        l.add("lazy");
        l.add("leaf (noun)");
        l.add("lean (verb)");
        l.add("learn (verb)");
        l.add("least (noun)");
        l.add("leave (verb)");
        l.add("lecture");
        l.add("left (noun)");
        l.add("leg");
        l.add("legal");
        l.add("lemon (noun)");
        l.add("length (noun)");
        l.add("less (pronoun)");
        l.add("lesson (noun)");
        l.add("let (verb)");
        l.add("level (verb)");
        l.add("library (noun)");
        l.add("license (noun)");
        l.add("lie (noun)");
        l.add("life (noun)");
        l.add("light (adjective)");
        l.add("like (noun)");
        l.add("limit (noun)");
        l.add("line (verb)");
        l.add("lip)");
        l.add("list (noun)");
        l.add("live (adjective)");
        l.add("load (verb)");
        l.add("loan");
        l.add("local (adjective)");
        l.add("locate (verb)");
        l.add("location (noun)");
        l.add("lock (noun)");
        l.add("long (adjective)");
        l.add("lose (verb)");
        l.add("loss");
        l.add("loud (adjective)");
        l.add("love");
        l.add("low (adjective)");
        l.add("lower (adjective)");
        l.add("loyal");
        l.add("luck");
        l.add("lunch (noun)");
        l.add("lung");
        l.add("lust");

        List<String> m = new ArrayList<String>();
        m.add("machine (noun)");
        m.add("mad (adjective)");
        m.add("magazine (noun)");
        m.add("magic (adjective)");
        m.add("mail");
        m.add("main (adjective)");
        m.add("maintain (verb)");
        m.add("major");
        m.add("make (verb)");
        m.add("male (adjective)");
        m.add("malice (noun)");
        m.add("man (noun)");
        m.add("manage (verb)");
        m.add("manner (noun)");
        m.add("map (noun)");
        m.add("march (noun)");
        m.add("margin (noun)");
        m.add("mark (noun)");

        m.add("market");
        m.add("marriage (noun)");
        m.add("marry (verb)");
        m.add("mass (noun)");
        m.add("match (noun)");
        m.add("mate (noun)");
        m.add("material (noun)");
        m.add("mathematics (noun)");
        m.add("matter (noun)");
        m.add("maximum (adjective)");
        m.add("may (verb)");
        m.add("me (pronoun)");
        m.add("meal (noun)");
        m.add("mean (verb)");
        m.add("meaning (noun)");
        m.add("meanwhile (adverb)");
        m.add("measure (verb)");
        m.add("meat (noun)");
        m.add("media (noun)");
        m.add("medicine (noun)");
        m.add("meet (verb)");
        m.add("mental (adjective)");
        m.add("melt (verb)");
        m.add("memory (noun)");
        m.add("mess (noun)");
        m.add("message (noun)");
        m.add("metal");
        m.add("meter (noun)");
        m.add("method (noun)");
        m.add("middle (adjective)");
        m.add("midnight");
        m.add("mile (noun)");
        m.add("milk (noun)");
        m.add("mine (pronoun)");
        m.add("mineral (adverb)");
        m.add("minimum (verb)");
        m.add("minor (noun)");
        m.add("minute (noun)");
        m.add("miracle (noun)");
        m.add("mirror (verb)");
        m.add("misery (adjective)");
        m.add("miss (noun)");
        m.add("mistake (noun)");
        m.add("mix (noun)");
        m.add("mixture (noun)");
        m.add("mode");
        m.add("moment (noun)");
        m.add("money (verb)");
        m.add("month");
        m.add("mood (noun)");
        m.add("moon (noun)");
        m.add("more (pronoun)");
        m.add("morning");
        m.add("most (adverb)");
        m.add("mother");
        m.add("motion (noun)");
        m.add("motor (noun)");
        m.add("mountain (noun)");
        m.add("mouse (noun)");
        m.add("mouth");
        m.add("move (noun)");
        m.add("movie (noun)");
        m.add("much (adjective)");
        m.add("mud (noun)");
        m.add("music (noun)");
        m.add("musician");
        m.add("must (verb)");
        m.add("my (adjective)");
        m.add("myself (pronoun)");
        m.add("mystery (noun)");

        List<String> n = new ArrayList<String>();
        n.add("nail (verb)");
        n.add("naked (adjective)");
        n.add("name (noun)");
        n.add("narrow (adjective)");
        n.add("nation (noun");
        n.add("native (adjective)");
        n.add("natural (adjective)");
        n.add("nausea");
        n.add("navy (noun)");
        n.add("near (adjective)");
        n.add("neat (adjective)");
        n.add("necessary (adjective)");
        n.add("neck");
        n.add("need (noun)");
        n.add("negative (adjective)");
        n.add("negligence");
        n.add("neighbor (noun)");
        n.add("neither (pronoun)");
        n.add("nerve (noun)");
        n.add("nervous");
        n.add("net (noun)");
        n.add("network (noun)");
        n.add("neutral (adjective)");
        n.add("never (adverb)");
        n.add("new (adjective)");
        n.add("news");
        n.add("newspaper (noun)");
        n.add("next (pronoun)");
        n.add("nice");
        n.add("niece");
        n.add("night");
        n.add("no (adjective)");
        n.add("noise (noun)");
        n.add("none");
        n.add("noon (noun)");
        n.add("nor (conjunction)");
        n.add("normal (adjective)");
        n.add("notebook");
        n.add("notes");
        n.add("now");
        n.add("nurse");
        n.add("nutritionist");

        List<String> o = new ArrayList<String>();
        o.add("o'clock (adverb)");
        o.add("oath");
        o.add("obey (verb)");
        o.add("object (verb)");
        o.add("observe (verb)");
        o.add("obsessive");
        o.add("obtain (verb)");
        o.add("obvious (adjective)");
        o.add("occasion (noun)");
        o.add("occupy (verb)");
        o.add("occur (verb)");
        o.add("ocean (noun)");
        o.add("odd (adjective)");
        o.add("of (preposition)");
        o.add("off (adverb)");
        o.add("offend (verb)");
        o.add("offense (noun)");
        o.add("offensive (adverb)");
        o.add("often");
        o.add("oil (noun)");
        o.add("old (adjective)");
        o.add("on (adjective)");
        o.add("once (adverb)");
        o.add("one (adjective)");
        o.add("oneself (pronoun)");
        o.add("only (adjective)");
        o.add("onto (preposition)");
        o.add("open (noun)");
        o.add("opinion (noun)");
        o.add("optimism");
        o.add("or (conjunction)");
        o.add("orange (noun)");
        o.add("order (verb)");
        o.add("organ (noun)");
        o.add("organic");
        o.add("origin (noun)");
        o.add("original (noun)");
        o.add("other (pronoun)");
        o.add("ought (verb)");
        o.add("ounce (noun)");
        o.add("our (adjective)");
        o.add("ours (pronoun)");
        o.add("ourselves (pronoun)");
        o.add("our (adjective)");
        o.add("out (adverb)");
        o.add("outcome (noun)");
        o.add("outdoors (noun)");
        o.add("outgoing");
        o.add("overcast");
        o.add("ozone layer");

        List<String> p = new ArrayList<String>();
        p.add("pain");
        p.add("palm");
        p.add("painter");
        p.add("pan");
        p.add("paper (noun)");
        p.add("panic");
        p.add("paraphrase");
        p.add("parent");
        p.add("part (noun)");
        p.add("pass");
        p.add("passage (noun)");
        p.add("past (adverb)");
        p.add("paste (noun)");
        p.add("pause");
        p.add("pen (noun)");
        p.add("pencil (noun)");
        p.add("people (noun)");
        p.add("percent (noun)");
        p.add("perfect (adjective)");
        p.add("perfume (noun)");
        p.add("permission");
        p.add("person (noun)");
        p.add("personal (adjective)");
        p.add("pet (noun)");
        p.add("petal (noun)");
        p.add("phase");
        p.add("philosophy(noun)");
        p.add("phone (noun)");
        p.add("photograph (noun)");
        p.add("phrase (noun)");
        p.add("physical (adjective)");
        p.add("physics (noun)");
        p.add("piano (noun)");
        p.add("place (noun)");
        p.add("plant (noun)");
        p.add("plastic (noun)");
        p.add("plate (noun)");
        p.add("play (verb)");
        p.add("player (noun)");
        p.add("pleasure");
        p.add("poem (noun)");
        p.add("poetry (noun)");
        p.add("point (noun)");
        p.add("polite (noun)");
        p.add("poor (adjective)");
        p.add("pop (verb)");
        p.add("popular (adjective)");
        p.add("positive (adjective)");
        p.add("possible (adjective)");
        p.add("post (noun)");
        p.add("pour");
        p.add("power (noun)");
        p.add("practice (verb)");
        p.add("pray (verb)");
        p.add("precise");
        p.add("prefer (verb)");
        p.add("preference (noun)");
        p.add("premise (noun)");
        p.add("present (adjective)");
        p.add("prepare (verb)");
        p.add("prevent (verb)");
        p.add("previous (adjective)");
        p.add("price (noun)");
        p.add("pride (adjective)");
        p.add("priest (noun)");
        p.add("prince (noun)");
        p.add("princess (noun)");
        p.add("print (noun)");
        p.add("pro (noun)");
        p.add("problem (noun)");
        p.add("profit");
        p.add("progress");
        p.add("property");
        p.add("prosecute");
        p.add("proximity (noun)");
        p.add("psychologist");
        p.add("pupil");

        List<String> q = new ArrayList<String>();
        q.add("qualification (noun)");
        q.add("qualify (verb)");
        q.add("quality (noun)");
        q.add("quarter (noun)");
        q.add("quarterback");
        q.add("queen (noun)");
        q.add("question (verb)");
        q.add("quick (adjective)");
        q.add("quit (verb)");
        q.add("quite (verb)");
        q.add("quiz");
        q.add("quotation");
        q.add("quote (noun)");

        List<String> r = new ArrayList<String>();
        r.add("race (noun)");
        r.add("rain (noun)");
        r.add("raise (verb)");
        r.add("range (noun)");
        r.add("rank (verb)");
        r.add("rapid (adjective)");
        r.add("rare (verb)");
        r.add("rate (verb)");
        r.add("rather (adverb)");
        r.add("ratio (noun)");
        r.add("rational");
        r.add("raw (adjective)");
        r.add("reach (verb)");
        r.add("react (verb)");
        r.add("read (verb)");
        r.add("real (adjective)");
        r.add("reality (noun)");
        r.add("realize (verb)");
        r.add("reason (noun)");
        r.add("rebuke (verb)");
        r.add("recall (verb)");
        r.add("receive (verb)");
        r.add("recent (adjective)");
        r.add("recognize (verb)");
        r.add("recommend (adjective)");
        r.add("record (noun)");
        r.add("recover (verb)");
        r.add("red (adjective)");
        r.add("refuse (verb)");
        r.add("regard (noun)");
        r.add("regret (noun)");
        r.add("relate (verb)");
        r.add("relation (noun)");
        r.add("relationship (noun)");
        r.add("relax (verb)");
        r.add("release (noun)");
        r.add("remain (verb)");
        r.add("remind (verb)");
        r.add("remove (verb)");
        r.add("repeat (verb)");
        r.add("research");
        r.add("respect (noun)");
        r.add("respond (verb)");
        r.add("rest (noun)");
        r.add("restore (verb)");
        r.add("result (verb)");
        r.add("return (noun)");
        r.add("reveal (verb)");
        r.add("reverse (noun)");
        r.add("review (noun)");
        r.add("reward (verb)");
        r.add("rhythm (noun)");
        r.add("rice (noun)");
        r.add("rich (adjective)");
        r.add("right (adverb)");
        r.add("rhythm (noun)");
        r.add("round (verb)");
        r.add("route (noun)");
        r.add("row (noun)");
        r.add("rub (verb)");
        r.add("rude (adjective)");
        r.add("rule (verb)");
        r.add("run (verb)");
        r.add("ruthless");

        List<String> s = new ArrayList<String>();
        s.add("sad (adjective)");
        s.add("sale (noun)");
        s.add("salt (noun)");
        s.add("same (pronoun)");
        s.add("save (verb)");
        s.add("say (verb)");
        s.add("scare (noun)");
        s.add("scene (noun)");
        s.add("school (noun)");
        s.add("score (verb)");
        s.add("scream (verb)");
        s.add("screen (noun)");
        s.add("sea (noun)");
        s.add("search (noun)");
        s.add("season (noun)");
        s.add("second");
        s.add("secret (noun)");
        s.add("see (verb)");
        s.add("seek (verb)");
        s.add("select (verb)");
        s.add("sell (verb)");
        s.add("sentence (noun)");
        s.add("shade (noun)");
        s.add("shadow (noun)");
        s.add("shake (noun)");
        s.add("shape (noun)");
        s.add("shine (noun)");
        s.add("ship (noun)");
        s.add("shirt (noun)");
        s.add("shoe (noun)");
        s.add("shop (noun)");
        s.add("should (verb)");
        s.add("shoulder");
        s.add("shout (noun)");
        s.add("show (noun)");
        s.add("shut (verb)");
        s.add("sick (adjective)");
        s.add("side (noun)");
        s.add("sign (noun)");
        s.add("silent (adjective)");
        s.add("similar (noun)");
        s.add("sin (noun)");
        s.add("since (noun)");
        s.add("sing (noun)");
        s.add("sister (noun)");
        s.add("sit (verb)");
        s.add("size (noun)");
        s.add("skill (noun)");
        s.add("skin (noun)");
        s.add("skirt (noun)");
        s.add("sky (noun)");
        s.add("slap (noun)");
        s.add("sleep (noun)");
        s.add("small (adjective)");
        s.add("smell (noun)");
        s.add("smile (verb)");
        s.add("so (adverb)");
        s.add("soft (adjective)");
        s.add("son");
        s.add("song (noun)");
        s.add("soup (noun)");
        s.add("space (noun)");
        s.add("speak (verb)");
        s.add("spicy (noun)");
        s.add("sprain");
        s.add("spring");
        s.add("square (noun)");
        s.add("stable (adjective)");
        s.add("star (noun)");
        s.add("start (noun)");
        s.add("stay (verb)");
        s.add("step (noun)");
        s.add("still (noun)");
        s.add("stop (noun)");
        s.add("success");
        s.add("summer");
        s.add("sunny");
        s.add("sunshine");
        s.add("support");
        s.add("sympathy");

        List<String> t = new ArrayList<String>();
        t.add("table (noun)");
        t.add("tail (noun)");
        t.add("taste (noun)");
        t.add("tear (verb)");
        t.add("tell (verb)");
        t.add("test (noun)");
        t.add("text (noun)");
        t.add("textbook");
        t.add("than (preposition)");
        t.add("that (adverb)");
        t.add("there (noun)");
        t.add("thing (noun)");
        t.add("thorough (adjective)");
        t.add("throw (verb)");
        t.add("thus (adverb)");
        t.add("tie (verb)");
        t.add("time (noun)");
        t.add("to (preposition)");
        t.add("today (adverb)");
        t.add("together (adverb)");
        t.add("tomorrow (adverb)");
        t.add("tongue");
        t.add("tonight (adverb)");
        t.add("too (adverb)");
        t.add("top (noun)");
        t.add("topic (adjective)");
        t.add("towel");
        t.add("trip (noun)");
        t.add("trouble (noun)");
        t.add("tuition");
        t.add("turbulence");

        List<String> u = new ArrayList<String>();
        u.add("ugly (noun)");
        u.add("umbrella (noun)");
        u.add("unable (noun)");
        u.add("uncle (noun)");
        u.add("under (noun)");
        u.add("underneath (noun)");
        u.add("undergo (noun)");
        u.add("understand (noun)");
        u.add("undertake (noun)");
        u.add("understand (noun)");
        u.add("unit (noun)");
        u.add("unite (noun)");
        u.add("universal (adjective)");
        u.add("universe (noun)");
        u.add("university");
        u.add("unknown (adjective)");
        u.add("unlike (adjective)");
        u.add("until (preposition)");
        u.add("up (noun)");
        u.add("upset (noun)");
        u.add("us (pronoun)");
        u.add("use (noun)");
        u.add("user (noun)");
        u.add("usual (adjective)");

        List<String> v = new ArrayList<String>();
        v.add("vacation");
        v.add("value (noun)");
        v.add("variation");
        v.add("variety");
        v.add("various");
        v.add("vary");
        v.add("vast");
        v.add("vegetable");
        v.add("vehicle");
        v.add("verb (noun)");
        v.add("verdict");
        v.add("version");
        v.add("very");
        v.add("vessel");
        v.add("veterinarian");
        v.add("victim");
        v.add("victory");
        v.add("video");
        v.add("view");
        v.add("village");

        List<String> w = new ArrayList<String>();
        w.add("wage (noun)");
        w.add("waist");
        w.add("wait (verb)");
        w.add("waive (verb)");
        w.add("wake (verb)");
        w.add("walk (noun)");
        w.add("wall (noun)");
        w.add("wallet (noun)");
        w.add("wander (verb)");
        w.add("want (verb)");
        w.add("war (noun)");
        w.add("warm (verb)");
        w.add("warn (verb)");
        w.add("warning (noun)");
        w.add("wash (verb)");
        w.add("waste (verb)");
        w.add("watch (verb)");
        w.add("water (noun)");
        w.add("wave (verb)");

        List<String> x = new ArrayList<String>();

        List<String> y = new ArrayList<String>();
        y.add("yard (noun)");
        y.add("yawn (noun)");
        y.add("year (verb)");
        y.add("yell (verb)");
        y.add("yellow (adjective)");
        y.add("yes (adverb)");
        y.add("yesterday (noun)");
        y.add("yet");
        y.add("you (pronoun)");
        y.add("young (adjective)");
        y.add("your (adjective)");
        y.add("yours (pronoun)");
        y.add("yourself (pronoun)");
        y.add("youth (noun)");

        List<String> z = new ArrayList<String>();
        z.add("zealot (noun)");
        z.add("zenith (noun)");
        z.add("zero (noun)");
        z.add("zone (noun)");
        z.add("zoo (noun)");

        listDataChild.put(listDataHeader.get(0), a);
        listDataChild.put(listDataHeader.get(1), b);
        listDataChild.put(listDataHeader.get(2), c);
        listDataChild.put(listDataHeader.get(3), d);
        listDataChild.put(listDataHeader.get(4), e);
        listDataChild.put(listDataHeader.get(5), f);
        listDataChild.put(listDataHeader.get(6), g);
        listDataChild.put(listDataHeader.get(7), h);
        listDataChild.put(listDataHeader.get(8), i);
        listDataChild.put(listDataHeader.get(9), j);
        listDataChild.put(listDataHeader.get(10), k);
        listDataChild.put(listDataHeader.get(11), l);
        listDataChild.put(listDataHeader.get(12), m);
        listDataChild.put(listDataHeader.get(13), n);
        listDataChild.put(listDataHeader.get(14), o);
        listDataChild.put(listDataHeader.get(15), p);
        listDataChild.put(listDataHeader.get(16), q);
        listDataChild.put(listDataHeader.get(17), r);
        listDataChild.put(listDataHeader.get(18), s);
        listDataChild.put(listDataHeader.get(19), t);
        listDataChild.put(listDataHeader.get(20), u);
        listDataChild.put(listDataHeader.get(21), v);
        listDataChild.put(listDataHeader.get(22), w);
        listDataChild.put(listDataHeader.get(23), x);
        listDataChild.put(listDataHeader.get(24), y);
        listDataChild.put(listDataHeader.get(25), z);
    }
}